apiVersion: v1
kind: Service
metadata:
  name: ${{values.artifact_id}}
  labels:
    app: ${{values.artifact_id}}
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: ${{values.artifact_id}}
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{values.artifact_id}}
  labels:
    app: ${{values.artifact_id}}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ${{values.artifact_id}}
  template:
    metadata:
      labels:
        app: ${{values.artifact_id}}
    spec:
      containers:
        - name: ${{values.artifact_id}}
          image: spring-demo-gradle/${{values.artifact_id}}:0.0.1-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: sbom-volume
              mountPath: /app/sbom
              readOnly: true
      volumes:
        - name: sbom-volume
          emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{values.artifact_id}}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${{values.artifact_id}}
                port:
                  number: 80