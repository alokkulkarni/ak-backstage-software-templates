apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{values.component_id | dump}}
  {%- if values.description %}
  description: ${{values.description | dump}}
  {%- endif %}
  annotations:
    github.com/project-slug: ${{values.org_owner + "/" + values.artifact_id}}
    backstage.io/techdocs-ref: dir:.
    sonarqube.org/project-key: ${{values.org_owner + "_" + values.artifact_id}}
    backstage.io/code-coverage: scm-only
    # backstage.io/source-location: '${{values.destination.repo.url}}'
    # backstage.io/managed-by-location: '${{values.destination.repo.url}}'
    jenkins.io/job-full-name: "${{values.artifact_id}}"
    argocd/app-name: ${{values.artifact_id}}
    jira.com/project-key: ${{values.artifact_id}} # The key of the Jira project to track for this entity, or Comma-separated list of Jira project keys optionally prefixed with the instance name
    # jira.com/components: component,component,component # Jira component name separated with a comma. The Roadie Backstage Jira Plugin Jira annotation `/component` is also supported here by default
    # jira.com/filter-ids: 12345,67890 # Jira filter id separated with a comma
    jira.com/incoming-issues-status: Incoming # The name of the status for incoming issues in Jira. Default: New
spec:
  type: service
  lifecycle: experimental
  owner: ${{values.owner | dump}}
  system: ${{values.destination.owner + "/" + values.destination.repo}}
  dependencyOf:
    - component:${{values.owner + "/" + values.java_package_name}}
  providesApis:
    - "api:info:health"
  providedApis:
    - ${{values.org_owner + "/" + values.artifact_id + ":info:health"}}
  dependsOn:
    - resource:default/artists-db
  definition: |
    openapi: 3.0.3
    info:
      title: Spring Boot Gradle Demo API
      description: |-
        This is the API documentation for the Spring Boot Gradle application, providing health and information endpoints.
        
        ## Endpoints
        
        - /api/health - Health check endpoint
        - /api/info - Application information
        - Actuator endpoints (/actuator/*)
        
        ## Features
        
        - Spring Boot 3.4.5
        - Gradle build system
        - JUnit5 with JaCoCo and PIT for testing
        - Software Bill of Materials (SBOM) generation
        - Spring Actuator for monitoring
      version: 0.0.1-SNAPSHOT
      contact:
        name: API Support
      license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    externalDocs:
      description: Additional documentation
      url: https://example.com/docs
    servers:
      - url: http://localhost:8585
        description: Local development server
    tags:
      - name: health
        description: Health and information endpoints
      - name: monitoring
        description: Actuator monitoring endpoints
    paths:
      /api/health:
        get:
          tags:
            - health
          summary: Application health check
          description: Returns the health status of the application
          operationId: getHealth
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/HealthResponse'
      /api/info:
        get:
          tags:
            - health
          summary: Application information
          description: Returns detailed information about the application
          operationId: getInfo
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/InfoResponse'
      /actuator/health:
        get:
          tags:
            - monitoring
          summary: Spring Actuator health
          description: Spring Actuator health endpoint with detailed system health status
          operationId: getActuatorHealth
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
      /actuator/info:
        get:
          tags:
            - monitoring
          summary: Spring Actuator info
          description: Spring Actuator info endpoint with build and git information
          operationId: getActuatorInfo
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
      /actuator/metrics:
        get:
          tags:
            - monitoring
          summary: Spring Actuator metrics
          description: Spring Actuator metrics endpoint with available metrics
          operationId: getActuatorMetrics
          responses:
            '200':
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
      /actuator/prometheus:
        get:
          tags:
            - monitoring
          summary: Spring Actuator prometheus
          description: Spring Actuator prometheus endpoint for metrics scraping
          operationId: getActuatorPrometheus
          responses:
            '200':
              description: Successful operation
              content:
                text/plain:
                  schema:
                    type: string
    components:
      schemas:
        HealthResponse:
          type: object
          properties:
            status:
              type: string
              example: "UP"
              description: The status of the application
          required:
            - status
        InfoResponse:
          type: object
          properties:
            app:
              type: string
              example: "Spring Demo Gradle"
              description: The name of the application
            version:
              type: string
              example: "0.0.1-SNAPSHOT"
              description: The version of the application
            buildType:
              type: string
              example: "Gradle"
              description: The build system used
            features:
              type: object
              properties:
                sbom:
                  type: string
                  example: "enabled"
                  description: Software Bill of Materials status
                actuator:
                  type: string
                  example: "enabled"
                  description: Spring Actuator status
                testing:
                  type: string
                  example: "JUnit5 + JaCoCo + PIT"
                  description: Testing frameworks used
          required:
            - app
            - version
            - buildType
            - features


